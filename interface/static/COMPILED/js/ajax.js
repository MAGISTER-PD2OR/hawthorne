// Generated by CoffeeScript 2.3.1
(function() {
  var ajax, lazy;

  ajax = function(mode, target = '.main', page = 1, manual = false) {
    var endpoint, header;
    endpoint = window.endpoint.ajax;
    header = {
      "X-CSRFToken": window.csrftoken
    };
    switch (mode) {
      case "servers[overview]":
        endpoint = window.endpoint.ajax.servers[page];
        break;
      case "admins[servers][admins]":
        endpoint = window.endpoint.ajax.admins.servers.admins[page];
        break;
      case "admins[web][admins]":
        endpoint = window.endpoint.ajax.admins.web.admins[page];
        break;
      case "punishments[bans]":
        endpoint = window.endpoint.ajax.punishments.bans[page];
        break;
      case "punishments[mutes]":
        endpoint = window.endpoint.ajax.punishments.mutes[page];
        break;
      case "punishments[gags]":
        endpoint = window.endpoint.ajax.punishments.gags[page];
    }
    endpoint.post(header, {}, function(dummy, response) {
      var data, params, status, url;
      status = response.status;
      data = response.data;
      target = $(target);
      if (status === 200) {
        if (page === 1 || manual) {
          target.html('');
        }
        target.htmlAppend(data);
        $('script.execute:not(.evaluated)', target).forEach(function(src) {
          eval(src.innerHTML);
          return $(src).addClass("evaluated");
        });
        window._.init(target);
        if (manual) {
          if (page === 1) {
            $(".timeTableGo.fLeft").addClass("hidden");
          } else {
            $(".timeTableGo.fLeft").removeClass("hidden");
          }
          if (window.pagination.limitation === page) {
            $(".timeTableGo.fRight").addClass("hidden");
          } else {
            $(".timeTableGo.fRight").removeClass("hidden");
          }
          $(".paginationContent h3 .current")[0].innerHTML = page;
          window.pagination.current = page;
          url = new URL(document.location.href);
          params = new URLSearchParams(url.search.substring(1));
          params.set("page", page);
          url.search = "?" + params.toString();
          history.pushState(null, null, url.href);
        } else {
          window.ajax(mode, target, page + 1);
        }
      }
    });
  };

  lazy = function(mode, fallback) {
    var a, endpoint, hash, header;
    endpoint = window.endpoint.ajax;
    header = {
      "X-CSRFToken": window.csrftoken
    };
    if (window.location.hash) {
      hash = window.location.hash.substring(1);
    } else {
      hash = fallback;
      history.pushState(null, null, `#${fallback}`);
    }
    switch (mode) {
      case "servers[detailed]":
        endpoint = window.endpoint.ajax.servers[window.slug][hash];
        break;
      case 'admins[servers]':
        endpoint = window.endpoint.ajax.admins.servers[hash];
        break;
      case 'admins[web]':
        endpoint = window.endpoint.ajax.admins.web[hash];
        break;
      case 'punishments[bans]':
        endpoint = window.endpoint.ajax.punishments.bans;
        break;
      case 'punishments[mutes]':
        endpoint = window.endpoint.ajax.punishments.mutes;
        break;
      case 'punishments[gags]':
        endpoint = window.endpoint.ajax.punishments.gags;
    }
    a = new URLSearchParams(window.location.search.substring(1));
    endpoint.post(header, a, function(dummy, response) {
      var data, status, target;
      status = response.status;
      data = response.data;
      target = $('.main');
      if (status === 200) {
        $('.paginationContent', target).remove();
        target.htmlAppend(data);
        $('.paginationContent script.execute:not(.evaluated)', target).forEach(function(src) {
          eval(src.innerHTML);
          return $(src).addClass("evaluated");
        });
      }
    });
  };

  window.ajax = ajax;

  window.lazy = lazy;

}).call(this);
