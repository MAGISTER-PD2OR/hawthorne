// Generated by CoffeeScript 2.3.1
(function() {
  var ajax, lazy;

  ajax = function(mode, target = '.main', page = 1, manual = false) {
    var endpoint, header;
    endpoint = window.endpoint.ajax;
    header = {
      "X-CSRFToken": window.csrftoken
    };
    switch (mode) {
      case "servers[overview]":
        endpoint = window.endpoint.ajax.servers[page];
        break;
      case "admins[servers][admins]":
        endpoint = window.endpoint.ajax.admins.servers.admins[page];
    }
    endpoint.post(header, {}, function(dummy, response) {
      var data, status;
      status = response.status;
      data = response.data;
      target = $(target);
      if (status === 200) {
        if (page === 1 || manual) {
          target.html('');
        }
        target.htmlAppend(data);
        $('script.execute:not(.evaluated)', target).forEach(function(src) {
          eval(src.innerHTML);
          return $(src).addClass("evaluated");
        });
        if (!manual) {
          window.ajax(mode, target, page + 1);
        }
      }
    });
  };

  lazy = function(mode, fallback) {
    var endpoint, hash, header;
    endpoint = window.endpoint.ajax;
    header = {
      "X-CSRFToken": window.csrftoken
    };
    if (window.location.hash) {
      hash = window.location.hash.substring(1);
    } else {
      hash = fallback;
      history.pushState(null, null, `#${fallback}`);
    }
    switch (mode) {
      case "servers[detailed]":
        endpoint = window.endpoint.ajax.servers[window.slug][hash];
        break;
      case 'admins[servers]':
        endpoint = window.endpoint.ajax.admins.servers[hash];
    }
    endpoint.post(header, {}, function(dummy, response) {
      var data, status, target;
      status = response.status;
      data = response.data;
      target = $('.main');
      if (status === 200) {
        $('.paginationContent', target).remove();
        target.htmlAppend(data);
        $('.paginationContent script.execute:not(.evaluated)', target).forEach(function(src) {
          eval(src.innerHTML);
          return $(src).addClass("evaluated");
        });
      }
    });
  };

  window.ajax = ajax;

  window.lazy = lazy;

}).call(this);
