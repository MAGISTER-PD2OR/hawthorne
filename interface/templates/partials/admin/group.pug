- load interface_utils
- load i18n

.row.pure-g
  input.hidden.uuid(type='hidden', value=data.id)
  .column.icon.name.pure-u-7-24
    i.explicit(data-feather="users")
    span= data.name
  .column.icon.immunity.pure-u-7-24
    i.explicit(data-feather="trending-up")
    span= data.immunity
      |%
  .column.icon.usetime.pure-u-7-24
    i.explicit(data-feather="clock")
    - if data.usetime is None
      span
        i.bpi-unlimited
    - else
      span= data.usetime|duration
  .column.icon.pure-u-3-24
    .spacer
    - if perms.core.modify_servergroup
      .action
        i.explicit(data-feather="edit-2", onclick="window.api.edit('admin__groups', this)")
    - if perms.core.delete_servergroup
      .action
        i.explicit(data-feather="trash-2", onclick="window.api.remove('admin__groups', this)")
  .column.icon.server.pure-u-7-24
    input.server.hidden(type='hidden', value="{{data.server.id}}")
    i.explicit.white(data-feather="hard-drive")
    i.explicit(data-feather="hard-drive")
    span(style="width:calc(100% - 36px*2)")
      if data.server is not None
        = data.server.name
      else
        | {% trans "all" %}
  .column.icon.group.pure-u-14-24
    i.explicit(data-feather="zap")
    .actions.disabled
      input(type='checkbox', checked=data.flags.can_reservation, id="reservation-{{data.id|stringformat:'s'}}", value='A').tiny
      label.tiny(for="reservation-{{data.id|stringformat:'s'}}", data-description='eservation') R

      input(type='checkbox', id="generic{{data.id|stringformat:'s'}}", checked=data.flags.can_generic, value='B').tiny
      label.tiny(for="generic{{data.id|stringformat:'s'}}", data-description='eneric') G

      input(type='checkbox', id="kick-{{data.id|stringformat:'s'}}", checked=data.flags.can_kick, value='C').tiny
      label.tiny(for="kick-{{data.id|stringformat:'s'}}", data-description='ick') K

      input(type='checkbox', id="ban-{{data.id|stringformat:'s'}}", checked=data.flags.can_ban, value='DE').tiny
      label.tiny(for="ban-{{data.id|stringformat:'s'}}", data-description='an') B

      input(type='checkbox', id="slay-{{data.id|stringformat:'s'}}", checked=data.flags.can_slay, value='F').tiny
      label.tiny(for="slay-{{data.id|stringformat:'s'}}", data-description='lay') S

      input(type='checkbox', id="map-{{data.id|stringformat:'s'}}", checked=data.flags.can_map, value='G').tiny
      label.tiny(for="map-{{data.id|stringformat:'s'}}", data-description='ap') M

      input(type='checkbox', id="cvar-{{data.id|stringformat:'s'}}", checked=data.flags.can_cvar, value='H').tiny
      label.tiny(for="cvar-{{data.id|stringformat:'s'}}", data-description='Var') C

      input(type='checkbox', id="config-{{data.id|stringformat:'s'}}", checked=data.flags.can_config, value='I').tiny
      label.tiny(for="config-{{data.id|stringformat:'s'}}", data-description='onfig') C

      input(type='checkbox', id="chat-{{data.id|stringformat:'s'}}", checked=data.flags.can_chat, value='J').tiny
      label.tiny(for="chat-{{data.id|stringformat:'s'}}", data-description='hat') C

      input(type='checkbox', id="vote-{{data.id|stringformat:'s'}}", checked=data.flags.can_vote, value='K').tiny
      label.tiny(for="vote-{{data.id|stringformat:'s'}}", data-description='ote') V

      input(type='checkbox', id="password-{{data.id|stringformat:'s'}}", checked=data.flags.can_password, value='L').tiny
      label.tiny(for="password-{{data.id|stringformat:'s'}}", data-description='assword') P

      input(type='checkbox', id="rcon-{{data.id|stringformat:'s'}}", checked=data.flags.can_rcon, value='M').tiny
      label.tiny(for="rcon-{{data.id|stringformat:'s'}}", data-description='Con') R

      input(type='checkbox', id="cheat-{{data.id|stringformat:'s'}}", checked=data.flags.can_cheat, value='N').tiny
      label.tiny(for="cheat-{{data.id|stringformat:'s'}}", data-description='heats') C
