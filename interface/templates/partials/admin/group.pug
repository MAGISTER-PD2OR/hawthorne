- load interface_utils

.row.pure-g
  .column.icon.username.pure-u-7-24
    i(data-feather="users")
    span= data.name
  .column.icon.server.pure-u-7-24
    i(data-feather="trending-up")
    span= data.immunity
      |%
  .column.icon.server.pure-u-7-24
    i(data-feather="clock")
    - if data.usetime is None
      i.bpi-unlimited
    - else
      span= data.usetime|duration
  .column.icon.pure-u-3-24
    .spacer
    - if perms.core.modify_servergroup
      .action
        i(data-feather="edit-2")
    - if perms.core.delete_servergroup
      .action
        i(data-feather="trash-2")
  .column.icon.server.pure-u-7-24
    i.explicit.white(data-feather="hard-drive")
    i(data-feather="hard-drive")
    if data.server is not None
      = data.server.name
    else
      | all
  .column.icon.group.pure-u-14-24
    i(data-feather="zap")
    .actions.disabled
      - if data.flags.can_reservation
        input(type='checkbox', checked, id="reservation-{{data.id|stringformat:'s'}}").tiny
      - else
        input(type='checkbox', id="reservation-{{data.id|stringformat:'s'}}").tiny
      label.tiny(for="reservation-{{data.id|stringformat:'s'}}", data-description='eservation') R

      - if data.flags.can_generic
        input(type='checkbox', id="generic{{data.id|stringformat:'s'}}", checked).tiny
      - else
        input(type='checkbox', id="generic{{data.id|stringformat:'s'}}").tiny
      label.tiny(for="generic{{data.id|stringformat:'s'}}", data-description='eneric') G

      - if data.flags.can_kick
        input(type='checkbox', id="kick-{{data.id|stringformat:'s'}}", checked).tiny
      - else
        input(type='checkbox', id="kick-{{data.id|stringformat:'s'}}").tiny
      label.tiny(for="kick-{{data.id|stringformat:'s'}}", data-description='ick') K

      - if data.flags.can_ban
        input(type='checkbox', id="ban-{{data.id|stringformat:'s'}}", checked).tiny
      - else
        input(type='checkbox', id="ban-{{data.id|stringformat:'s'}}").tiny
      label.tiny(for="ban-{{data.id|stringformat:'s'}}", data-description='an') B

      - if data.flags.can_slay
        input(type='checkbox', id="slay-{{data.id|stringformat:'s'}}", checked).tiny
      - else
        input(type='checkbox', id="slay-{{data.id|stringformat:'s'}}").tiny
      label.tiny(for="slay-{{data.id|stringformat:'s'}}", data-description='lay') S

      - if data.flags.can_map
        input(type='checkbox', id="map-{{data.id|stringformat:'s'}}", checked).tiny
      - else
        input(type='checkbox', id="map-{{data.id|stringformat:'s'}}").tiny
      label.tiny(for="map-{{data.id|stringformat:'s'}}", data-description='ap') M

      - if data.flags.can_cvar
        input(type='checkbox', id="cvar-{{data.id|stringformat:'s'}}", checked).tiny
      - else
        input(type='checkbox', id="cvar-{{data.id|stringformat:'s'}}").tiny
      label.tiny(for="cvar-{{data.id|stringformat:'s'}}", data-description='Var') C

      - if data.flags.can_config
        input(type='checkbox', id="config-{{data.id|stringformat:'s'}}", checked).tiny
      - else
        input(type='checkbox', id="config-{{data.id|stringformat:'s'}}").tiny
      label.tiny(for="config-{{data.id|stringformat:'s'}}", data-description='onfig') C

      - if data.flags.can_chat
        input(type='checkbox', id="chat-{{data.id|stringformat:'s'}}", checked).tiny
      - else
        input(type='checkbox', id="chat-{{data.id|stringformat:'s'}}").tiny
      label.tiny(for="chat-{{data.id|stringformat:'s'}}", data-description='hat') C

      - if data.flags.can_vote
        input(type='checkbox', id="vote-{{data.id|stringformat:'s'}}", checked).tiny
      - else
        input(type='checkbox', id="vote-{{data.id|stringformat:'s'}}").tiny
      label.tiny(for="vote-{{data.id|stringformat:'s'}}", data-description='ote') V

      - if data.flags.can_password
        input(type='checkbox', id="password-{{data.id|stringformat:'s'}}", checked).tiny
      - else
        input(type='checkbox', id="password-{{data.id|stringformat:'s'}}").tiny
      label.tiny(for="password-{{data.id|stringformat:'s'}}", data-description='assword') P

      - if data.flags.can_rcon
        input(type='checkbox', id="rcon-{{data.id|stringformat:'s'}}", checked).tiny
      - else
        input(type='checkbox', id="rcon-{{data.id|stringformat:'s'}}").tiny
      label.tiny(for="rcon-{{data.id|stringformat:'s'}}", data-description='Con') R

      - if data.flags.can_cheat
        input(type='checkbox', id="cheat-{{data.id|stringformat:'s'}}", checked).tiny
      - else
        input(type='checkbox', id="cheat-{{data.id|stringformat:'s'}}").tiny
      label.tiny(for="cheat-{{data.id|stringformat:'s'}}", data-description='heats') C
