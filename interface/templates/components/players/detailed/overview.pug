- load i18n
- load staticfiles
- load utils

.paginationContent.ct1
  .section.group
    .col.span_1_of_2
      .CBox.nomargin
        h3 Activity in {% now "F" %} (Days)
        .chartContainer.nomargin
          canvas.serverChartMonthly
        script.execute.
          var ctx = document.getElementsByClassName("serverChartMonthly")[0].getContext('2d');
          var gradient = ctx.createLinearGradient(0, 0, 0, 400);
          gradient.addColorStop(0, 'rgba(0,169,255,0.2)');
          gradient.addColorStop(1, 'rgba(0,169,255,0)');
          var myChart = new Chart(ctx, {
          type: 'line',
          data: {
          labels: {{months|flatten:"0"|safe}},
          datasets: [{
          pointHoverBorderColor: '#0075b1',
          pointHoverBackgroundColor: '#fff',
          label: 'Players',
          data: {{months|flatten:"1"|safe}},
          backgroundColor: gradient,
          borderColor: [
          'rgb(0,169,255)'
          ],
          borderWidth: 4
          }]
          },
          options: {
          legend: {
          display: false
          },
          maintainAspectRatio: false,
          scales: {
          yAxes: [{
          display:false,
          gridLines: {
          color: 'transparent',
          },
          ticks: {
          beginAtZero:false,
          fontColor: 'white'
          }
          }],
          xAxes: [{
          display:false,
          gridLines: {
          color: 'transparent',
          },
          ticks: {
          fontColor: 'white',
          }
          }]
          }
          }
          });
          myChart.canvas.parentNode.style.height = '200px';
    .col.span_1_of_2
      .CBox.nomargin
        h3 Activity throughout time (Years)
        .chartContainer.nomargin
          canvas.serverChartAllTime
        script.execute.
          var ctx = document.getElementsByClassName("serverChartAllTime")[0].getContext('2d');
          var gradient = ctx.createLinearGradient(0, 0, 0, 400);
          gradient.addColorStop(0, 'rgba(0,169,255,0.2)');
          gradient.addColorStop(1, 'rgba(0,169,255,0)');
          var myChart = new Chart(ctx, {
          type: 'line',
          data: {
          labels: {{years|flatten:"0"|safe}},
          datasets: [{
          pointHoverBorderColor: '#0075b1',
          pointHoverBackgroundColor: '#fff',
          label: 'Players',
          data: {{years|flatten:"1"|safe}},
          backgroundColor: gradient,
          borderColor: [
          'rgb(0,169,255)'
          ],
          borderWidth: 4
          }]
          },
          options: {
          legend: {
          display: false
          },
          maintainAspectRatio: false,
          scales: {
          yAxes: [{
          display: false,
          gridLines: {
          color: "rgba(0, 0, 0, 0)",
          },
          ticks: {
          beginAtZero:false,
          fontColor: 'white'
          }
          }],
          xAxes: [{
          display: false,
          gridLines: {
          display: false,
          color: "rgba(0, 0, 0, 0)",
          },
          ticks: {
          fontColor: 'white',
          }
          }]
          }
          }
          });
          myChart.canvas.parentNode.style.height = '200px';
  .server.CBox
    .section.group.nomargin.serverOverview
      .col.span_1_of_2.nomargin
        .section.group.nomargin.serverOverview
          .col.span_1_of_2.nomargin.avatar
            img.thumbnail(src="{{data.avatar}}")
          .col.span_1_of_2.nomargin
            h2
              = data.namespace
            p
              i.fa.fa-gamepad(style="margin: 0 5px 0 0")
              | favorite game to play?
              //- = data.get_game_display
      .col.span_1_of_2.nomargin
        ul.list
          li
            b SteamID:
            a(href="#", data-trigger="[clip/copy]", data-clipboard-text="0.0.0.0:27015")
              = data.ip|add:":"
              =data.port
              i.fa.fa-copy(style="margin-left:5px")
          li
            b SteamID3:
            = location
          li
            b SteamID64:
          li
            b Steam Level:
            //- = status.time.up|duration
          li
            b VAC:
            | no recorded ban
          li
            b Created At:
            //- = status.time.up|duration
  .CBox.nomargin
    .section.group.nomargin.serverOverview
      .col.span_1_of_2.nomargin
        h2 Personal Data
        p Data is constantly collected from servers and sent to your Hawthorne panel. We display specific user data - like profiles, activity, logs and recorded actions, etc.
      .col.span_1_of_2.nomargin
        ul.list
          li
            b Punishments:
            |  12
          li
            b Messages:
            |  2014
          li
            b Most Active Server:
            |  Hawthorne Test #1
          li
            a(href="javascript:void(0)", data-trigger="[modal/open]", data-trigger-target="[modal/players]") View Roles
            a(href="javascript:void(0)", data-trigger="[modal/open]", data-trigger-target="[modal/players]", style="margin-left: 6px") View Activity
            a(href="javascript:void(0)", data-trigger="[modal/open]", data-trigger-target="[modal/players]", style="margin-left: 6px") View Usernames
            a(href="javascript:void(0)", data-trigger="[modal/open]", data-trigger-target="[modal/players]", style="margin-left: 6px") View IPs
