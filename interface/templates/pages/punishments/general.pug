- extends ajax|yesno:'skeleton/wrappers/ajax.pug,skeleton/main.pug'
- load i18n
- load staticfiles

- block content
  .modal.modalDynamic(data-component='[modal/punishment]')
    h1
      if mode == "ban"
        | Bans
      if mode == "mute"
        | Mutes
      if mode == "gag"
        | Gags
      |  â€“ New
    .close(data-trigger='[modal/close]')
      i.icon.ion-ios-close
    .modalContent
      form(data-trigger='[modal/form]', data-action='create', data-mode='players[detailed][punishment]')
        if mode == "ban"
          input.hidden(type='checkbox', name='banned', checked, data-boolean='banned')
        if mode == "mute"
          input.hidden(type='checkbox', name='muted', checked, data-boolean='muted')
        if mode == "gag"
          input.hidden(type='checkbox', name='gagged', checked, data-boolean='gagged')
        .section.group.modalSelect
          ._Dynamic_Select
            ._Dynamic_Layer
            ._Title._Select_User(data-trigger='[composer/select/open]') Select a User
            input._Value.hidden.target(required)
            ._Select
              ._Select_Search(style='position:relative')
                input.skip(type='text', placeholder='Type to search...', data-trigger='[composer/select/steam]')
                .tooltip_container
                  .tooltip.left You can search via SteamID64, SteamID3, SteamID2, Steam profile URL or a username in the Hawthorne local database.
                  i.icon.ion-ios-information-circle-outline
              ._STitle Results
              ._Container
              ._Loading
                ._Loader
        .section.group.modalSelect
          ._Dynamic_Select
            ._Dynamic_Layer
            ._Title(data-trigger='[composer/select/open]') Choose a Server (optional)
            input._Value.hidden(name='server')
            ._Select
              ._Select_Search
                input.skip(type='text', placeholder='Type to search...', data-trigger='[composer/select/search]')
              ._STitle Results
              ._Container
                - for server in servers
                  li(data-trigger='[composer/select/choose]', data-value=server.id)
                    p= server.name
        .section.group.inputGroup
          input.smallInput(name='reason', type='text', required, placeholder=' ')
          span Reason

        b.mtop.mbotSmall
          i.icon.ion-ios-person(style='margin-right:10px')
          |  Punishment Length (optional)
        .section.divider
          .group.inputGroup
            input.smallInput(name='duration', type='text', data-trigger='[input/duration]', placeholder=' ', data-link='duration', data-transform='iso-duration', data-name='length')
            span
              | Length
              span.invalid
            .tooltip_container
              .tooltip.left Valid is the duration format described in <a style='color:green' href='https://tools.ietf.org/html/rfc3339#page-13', target='_blank'>RFC 3339, Page 13</a> as is the order. The P will be inserted automatically.
              i.icon.ion-ios-information-circle-outline
          .or or
          .group.inputGroup
            .flatpickr
              input(name='date', placeholder='Select a Date', data-link='duration', data-input, data-transform='flatpickr', data-name='length')
              .input-button(title='clear', data-clear)
                i.icon.ion-ios-close
            script.execute flatpickr('.flatpickr', {enableTime: true,dateFormat: "Y-m-d H:i",minDate: new Date(),wrap:true});

        input.skip.unset(type="submit", value='Save')

  ul.paginationTabs(data-target='punishments[bans]')
    li(data-trigger="[ct/switch]", data="", style="visibility:hidden")
      if mode == "ban"
        | Bans
      if mode == "mute"
        | Mutes
      if mode == "gag"
        | Gags
    li.fRight(data-trigger='[modal/open]', data-trigger-target='[modal/punishment]')
      i.icon.ion-ios-add(style="margin-right:5px")
      if mode == "ban"
        | New Ban
      if mode == "mute"
        | New Mute
      if mode == "gag"
        | New Gag

  script.execute.
    window.lazy('punishments[{{mode}}s]', '')
    window._.menu()
    window._.init()
