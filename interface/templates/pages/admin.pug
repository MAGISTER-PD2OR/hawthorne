- extends ajax|yesno:'skeleton/ajax.pug,skeleton/main.pug'
- load i18n
- load staticfiles

- block content
  - if perms.core.view_user
    .item.pure-u-1-1.users
      .heading {% trans "Administration" %}
      .list#admin__admin
        //- partials/admin/user.pug

      - if perms.core.add_user
        .row.add.pure-g
          .column.icon.username.pure-u-7-24
            select#username-input
              option(placeholder) {% trans "Username" %}
          .column.icon.group.pure-u-14-24
            select#group-input
              option(placeholder) {% trans "Group" %}
          .column.icon.pure-u-3-24
            .spacer
            .action
              i.animated.fancy(onclick="window.api.submit('admin__administrator', this)", data-feather="plus")

          script.execution.
            var usernameinput = new Choices('#username-input', {
              searchChoices: false,
              searchPlaceholderValue: "{% trans 'Steam Username' %}",
              choices: [],
              noResultsText: "{% trans 'Could not find any user' %}",
              noChoicesText: "{% trans 'Type to search' %}",
              itemSelectText: "{% trans 'Press to select' %}",
            })

            debounce_search = function(value, input) {
              window.steam.search(value, input);
            }

            var call = debounce(debounce_search, 200);
            usernameinput.passedElement.addEventListener('search', function(event) {
              if (event.detail.value.length > 0) {
                call(event.detail.value, usernameinput);
              }
            }, false);
            window.usernameinput = usernameinput

            var groupinput = new Choices('#group-input', {
              searchEnabled: false,
              choices: [],
              itemSelectText: "{% trans 'Press to select' %}",
            })
            window.groupinput = groupinput
            window.api.roles('', groupinput)

  - if perms.core.view_servergroup
    .item.pure-u-1-1.pure-u-lg-11-24.second
      .heading {% trans 'Groups' %}
      .list#admin__group
        .row.pure-g
          .column.icon.username.pure-u-7-24
            i(data-feather="users")
            span root
          .column.icon.server.pure-u-7-24
            i(data-feather="trending-up")
            span 100%
          .column.icon.server.pure-u-7-24
            i(data-feather="clock")
            i.bpi-unlimited
          .column.icon.pure-u-3-24
          .column.icon.server.pure-u-7-24
            i.explicit.white(data-feather="hard-drive")
            i(data-feather="hard-drive")
            if data.server is not None
              = data.server.name
            else
              | {% trans "all" %}
          .column.icon.group.pure-u-14-24
            i(data-feather="zap")
            span (root)
          script.execution.
            window.ajax.admin.groups(1)
        //- partials/admin/group.pug

      - if perms.core.add_servergroup
        .row.add.pure-g
          .column.icon.group.pure-u-7-24.input-wrapper
            input#inputgroupname(type='text')
            label.adjusted(for='inputgroupname')
              i.explicit(data-feather='users')
          .column.icon.immunity.pure-u-7-24.input-wrapper
            input#inputimmunityvalue(type='number', min='0', max='100', onkeypress="return isNumeric(event)", oninput="maxLengthCheck(this)", value="0")
            label.adjusted(for='inputimmunityvalue')
              i.explicit.adjusted(data-feather='trending-up')
            .appendix %

            script.execution.
              function maxLengthCheck(object) {
                if (object.value > object.max && object.value.length === object.max.length)
                  object.value = object.max
                if (object.value.length > object.max.length)
                  object.value = object.value.slice(0, object.max.length)
              }

              function isNumeric (evt) {
                var theEvent = evt || window.event;
                var key = theEvent.keyCode || theEvent.which;
                key = String.fromCharCode (key);
                var regex = /[0-9]|\./;
                if ( !regex.test(key) ) {
                  theEvent.returnValue = false;
                  if(theEvent.preventDefault) theEvent.preventDefault();
                }
              }

          .column.icon.time.pure-u-7-24.input-wrapper
            input#inputtimevalue(type='text', placeholder='11h 6m')
            label.adjusted(for='inputtimevalue')
              i.explicit(data-feather='clock')
          .column.icon.pure-u-3-24
          .column.icon.server.pure-u-7-24
            select#server-input
              option(placeholder) {% trans "Server" %}
          .column.icon.server.pure-u-14-24
            i(data-feather="zap")
            .actions.enabled
              input(type='checkbox', id="reservation-input", value='A').tiny
              label.tiny(for="reservation-input", data-description='eservation') R
              input(type='checkbox', id="genericinput", value='B').tiny
              label.tiny(for="genericinput", data-description='eneric') G
              input(type='checkbox', id="kick-input", value='C').tiny
              label.tiny(for="kick-input", data-description='ick') K
              input(type='checkbox', id="ban-input", value='DE').tiny
              label.tiny(for="ban-input", data-description='an') B
              input(type='checkbox', id="slay-input", value='F').tiny
              label.tiny(for="slay-input", data-description='lay') S
              input(type='checkbox', id="map-input", value='G').tiny
              label.tiny(for="map-input", data-description='ap') M
              input(type='checkbox', id="cvar-input", value='H').tiny
              label.tiny(for="cvar-input", data-description='Var') C
              input(type='checkbox', id="config-input", value='I').tiny
              label.tiny(for="config-input", data-description='onfig') C
              input(type='checkbox', id="chat-input", value='J').tiny
              label.tiny(for="chat-input", data-description='hat') C
              input(type='checkbox', id="vote-input", value='K').tiny
              label.tiny(for="vote-input", data-description='ote') V
              input(type='checkbox', id="password-input", value='L').tiny
              label.tiny(for="password-input",data-description='assword') P
              input(type='checkbox', id="rcon-input", value='M').tiny
              label.tiny(for="rcon-input", data-description='Con') R
              input(type='checkbox', id="cheat-input", value='N').tiny
              label.tiny(for="cheat-input", data-description='heats') C
          script.execution.
            $("input#inputtimevalue").on('change', function(event, ui) {
              var field, icon, sd, seconds;
              event.preventDefault();
              field = $('input#inputtimevalue');
              icon = $('input#inputtimevalue + label svg');
              sd = field.val();
              seconds = window.style.duration.parse(sd);
              if (sd !== '' && seconds === 0) {
                field.css('border-bottom-color', '#FF404B');
                icon.css('stroke', '#FF404B');
                this.focus();
              } else {
                field.css('border-bottom-color', '');
                icon.css('stroke', '');
                field.val(window.style.duration.string(seconds));
              }
            });

            var serverinput = new Choices('#server-input', {
              searchEnabled: false,
              choices: [],
              itemSelectText: "{% trans 'Press to select' %}",
            })
            window.serverinput = serverinput
            window.api.servers('', serverinput)
            window.ajax.admin.admins(1)

          .column.icon.pure-u-3-24
            .spacer
            .action
              i.animated.fancy(onclick="window.api.submit('admin__groups', this)", data-feather="plus")

  .spacer

  - if perms.core.view_chat
    .item.pure-u-1-1.pure-u-lg-11-24.second
      .heading {% trans "Logs" %}
      .list
        .row.pure-g#admin__log
          //- partials/admin/group.pug
        script.execution.
          window.ajax.admin.logs(1)
