- extends ajax|yesno:'skeleton/wrappers/ajax.pug,skeleton/main.pug'
- load i18n
- load staticfiles

- block content
  .modal.modalDynamic(data-component='[modal/admins/add]')
    h1 Admins – New
    .close(data-trigger='[modal/close]')
      i.icon.ion-ios-close
    .modalContent
      .section.group.modalSelect
        ._Dynamic_Select
          ._Dynamic_Layer
          ._Title._Select_User(data-trigger='[composer/select/open]') Select a User
          ._Select
            ._Select_Search(style='position:relative')
              input(type='text', placeholder='Type to search...')
              .tooltip_container
                .tooltip.left You can search via SteamID64, SteamID3, SteamID2, Steam profile URL or a username in the Hawthorne local database.
                i.icon.ion-ios-information-circle-outline
            ._STitle Results
            ._Container
              li(data-trigger='[composer/select/choose]')
                img.composerAvatar(src='https://steamcdn-a.akamaihd.net/steamcommunity/public/images/avatars/63/634ac38fd17b1b9527af0639f2295ac26e62c0b7_medium.jpg')
                p Akke
      .section.group.modalSelect
        ._Dynamic_Select
          ._Dynamic_Layer
          ._Title._Select_Role(data-trigger='[composer/select/open]') Select a Role
          ._Select
            ._Select_Search
              input(type='text', placeholder='Type to search...', data-trigger='[composer/select/search]')
            ._STitle Results
            ._Container
              - for role in roles
                li(data-trigger='[composer/select/choose]')
                  p= role.name
      button.unset
        i.icon.ion-ios-save(style='margin-right:6px;')
        | Save
  .modal.modalDynamic(data-component='[modal/group/add]')
    h1 Role – New
    .close(data-trigger='[modal/close]')
      i.icon.ion-ios-close
    .modalContent
      b.mtop.mbotSmall
        i.icon.ion-ios-person(style='margin-right:10px')
        |  Role Details
      .section.group.inputGroup
        input.smallInput(type='text', required)
        span Group Name
      .section.group.inputGroup
        input.smallInput(type='text', required)
        span Group Immunity (0-99)
      .section.group.inputGroup
        input.smallInput(type='text', data-trigger='[input/duration]', required)
        span Expiration
        .tooltip_container
          .tooltip.left Valid is the duration format described in <a style='color:green' href='https://tools.ietf.org/html/rfc3339#page-13', target='_blank'>RFC 3339, Page 13</a> as is the order. The P will be inserted automatically.
          i.icon.ion-ios-information-circle-outline
      .section.group.modalSelect
        ._Dynamic_Select
          ._Dynamic_Layer
          ._Title(data-trigger='[composer/select/open]') Choose a Server
          ._Select
            ._Select_Search
              input(type='text', placeholder='Type to search...')
            ._STitle Results
            ._Container
              li(data-trigger='[composer/select/choose]')
                img.composerAvatar(src='https://steamcdn-a.akamaihd.net/steamcommunity/public/images/avatars/63/634ac38fd17b1b9527af0639f2295ac26e62c0b7_medium.jpg')
                p
                  b Some random server
      b.mbotSmall(style='padding-top:6px')
        i.icon.ion-ios-flag(style='margin-right:10px')
        |  Flags
      .section.group
        .col.span_1_of_4
          .modalFlags
            label.switch
              input(type='checkbox')
              span.slider.round
            .switchText Reserved Slots
          .modalFlags
            label.switch
              input(type='checkbox')
              span.slider.round
            .switchText Generic
        .col.span_1_of_4
          .modalFlags
            label.switch
              input(type='checkbox')
              span.slider.round
            .switchText Kick
          .modalFlags
            label.switch
              input(type='checkbox')
              span.slider.round
            .switchText Ban
        .col.span_1_of_4
          .modalFlags
            label.switch
              input(type='checkbox')
              span.slider.round
            .switchText Slap
          .modalFlags
            label.switch
              input(type='checkbox')
              span.slider.round
            .switchText Map
        .col.span_1_of_4
          .modalFlags
            label.switch
              input(type='checkbox')
              span.slider.round
            .switchText Cvar
          .modalFlags
            label.switch
              input(type='checkbox')
              span.slider.round
            .switchText Config
      .section.group
        .col.span_1_of_4
          .modalFlags
            label.switch
              input(type='checkbox')
              span.slider.round
            .switchText Chat
          .modalFlags
            label.switch
              input(type='checkbox')
              span.slider.round
            .switchText Vote
        .col.span_1_of_4
          .modalFlags
            label.switch
              input(type='checkbox')
              span.slider.round
            .switchText Password
          .modalFlags
            label.switch
              input(type='checkbox')
              span.slider.round
            .switchText Remote Control
        .col.span_1_of_4
          .modalFlags
            label.switch
              input(type='checkbox')
              span.slider.round
            .switchText Cheats
          .modalFlags
            label.switch
              input(type='checkbox')
              span.slider.round
            .switchText Custom 1
        .col.span_1_of_4
          .modalFlags
            label.switch
              input(type='checkbox')
              span.slider.round
            .switchText Custom 2
          .modalFlags
            label.switch
              input(type='checkbox')
              span.slider.round
            .switchText Custom 3
      .section.group
        .col.span_1_of_4
          .modalFlags
            label.switch
              input(type='checkbox')
              span.slider.round
            .switchText Custom 4
          .modalFlags
            label.switch
              input(type='checkbox')
              span.slider.round
            .switchText Custom 5
        .col.span_1_of_4
          .modalFlags
            label.switch
              input(type='checkbox')
              span.slider.round
            .switchText Custom 6
      button.unset
        i.icon.ion-ios-save(style='margin-right:6px;')
        |  Save

  ul.paginationTabs(data-target='admins[servers]')
    li(data-trigger="[ct/switch]", data="admins") Admins
    li(data-trigger="[ct/switch]", data="roles") Roles
    li.fRight(data-trigger='[modal/open]', data-trigger-target='[modal/admins/add]')
      i.icon.ion-ios-add(style='margin-right:5px')
      | New Admin
    li.fRight(data-trigger='[modal/open]', data-trigger-target='[modal/group/add]', style="margin-right:6px")
      i.icon.ion-ios-add(style='margin-right:5px')
      | New Role

  script.execute.
    window.lazy('admins[servers]', 'admins')
    window._.menu()
    window._.init()
